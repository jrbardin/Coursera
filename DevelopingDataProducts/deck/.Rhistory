xlab("Segment") + ylab("Avg Page Views / Customer") +
scale_x_discrete(limits=c(seq(1,9))) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
ggplot() +
geom_bar(data = page_views_by_segment, aes(x = segment, y = avg_page_views), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", round(hline_value,2))), color="blue") +
geom_text(data = page_views_by_segment,
aes(x = segment, y = avg_page_views, label = round(avg_page_views,2)), color="grey") +
ggtitle("Average Page Views / Customer by Segment") +
xlab("Segment") + ylab("Avg Page Views / Customer") +
scale_x_discrete(limits=c(seq(1,9))) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
ggplot() +
geom_bar(data = page_views_by_segment, aes(x = segment, y = avg_page_views), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", round(hline_value,2))), color="blue") +
geom_text(data = page_views_by_segment,
aes(x = segment, y = avg_page_views, label = round(avg_page_views,2)), color="dkgrey") +
ggtitle("Average Page Views / Customer by Segment") +
xlab("Segment") + ylab("Avg Page Views / Customer") +
scale_x_discrete(limits=c(seq(1,9))) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
ggplot() +
geom_bar(data = page_views_by_segment, aes(x = segment, y = avg_page_views), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", round(hline_value,2))), color="blue") +
geom_text(data = page_views_by_segment,
aes(x = segment, y = avg_page_views, label = round(avg_page_views,2)), color="dimgrey") +
ggtitle("Average Page Views / Customer by Segment") +
xlab("Segment") + ylab("Avg Page Views / Customer") +
scale_x_discrete(limits=c(seq(1,9))) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
ggplot() +
geom_bar(data = page_views_by_segment, aes(x = segment, y = avg_page_views), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", round(hline_value,2))), color="blue") +
geom_text(data = page_views_by_segment,
aes(x = segment, y = avg_page_views, label = round(avg_page_views,2)), color="grey25") +
ggtitle("Average Page Views / Customer by Segment") +
xlab("Segment") + ylab("Avg Page Views / Customer") +
scale_x_discrete(limits=c(seq(1,9))) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
hline_value = mean(segment_summary$pct_visitors)
ggplot() +
geom_bar(data = segment_summary, aes(x = segment, y = pct_visitors), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", round(hline_value,2))), color="blue") +
geom_text(data = segment_summary,
aes(x = segment, y = pct_visitors, label = round(pct_visitors,2)), color="grey25") +
ggtitle("Percent of Customers Online by Segment") +
xlab("Segment") + ylab("% Customers Online") +
scale_x_discrete(limits=c(seq(1,9))) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
visitors_by_segment_df <-
sqldf("select segment, count(sessions.rr_member_nbr) as num_visitors
from rr_segment_lkp
left join sessions_per_cust_df sessions using (rr_member_nbr)
group by segment")
visitors_by_segment_df
segment_summary <- segment_population %>% left_join(visitors_by_segment_df, c("segment"))
segment_summary <- mutate(segment_summary, pct_visitors = round(num_visitors/population, digits=2))
plot(select(segment_summary, segment, pct_visitors))
segment_summary
segment_summary <- mutate(segment_summary, pct_visitors = num_visitors/population)
plot(select(segment_summary, segment, pct_visitors))
# plot segment values along with the overal mean
hline_value = mean(segment_summary$pct_visitors)
ggplot() +
geom_bar(data = segment_summary, aes(x = segment, y = pct_visitors), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", round(hline_value,2))), color="blue") +
geom_text(data = segment_summary,
aes(x = segment, y = pct_visitors, label = round(pct_visitors,2)), color="grey25") +
ggtitle("Percent of Customers Online by Segment") +
xlab("Segment") + ylab("% Customers Online") +
scale_x_discrete(limits=c(seq(1,9))) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
segment_summary
segment_summary <- mutate(segment_summary, num_visitors = num_visitors*10)
segment_summary <- mutate(segment_summary, pct_visitors = num_visitors/population)
plot(select(segment_summary, segment, pct_visitors))
segment_summary <- mutate(segment_summary, num_visitors = num_visitors*100)
segment_summary <- mutate(segment_summary, pct_visitors = num_visitors/population)
plot(select(segment_summary, segment, pct_visitors))
segment_summary <- segment_population %>% left_join(visitors_by_segment_df, c("segment"))
segment_summary <- mutate(segment_summary, num_visitors = num_visitors*100)
segment_summary <- mutate(segment_summary, pct_visitors = num_visitors/population)
plot(select(segment_summary, segment, pct_visitors))
hline_value = mean(segment_summary$pct_visitors)
ggplot() +
geom_bar(data = segment_summary, aes(x = segment, y = pct_visitors), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", round(hline_value,2))), color="blue") +
geom_text(data = segment_summary,
aes(x = segment, y = pct_visitors, label = round(pct_visitors,2)), color="grey25") +
ggtitle("Percent of Customers Online by Segment") +
xlab("Segment") + ylab("% Customers Online") +
scale_x_discrete(limits=c(seq(1,9))) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
ggplot() +
geom_bar(data = segment_summary, aes(x = segment, y = pct_visitors), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", round(hline_value,2))), color="blue") +
geom_text(data = segment_summary,
aes(x = segment, y = pct_visitors, label = round(pct_visitors,2)), color="grey25") +
ggtitle("Percent of Customers Online by Segment") +
xlab("Segment") + ylab("% Customers Online") +
scale_x_discrete(limits=c(seq(1,9))) +
scale_y_continuous(labels = percent) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
library(scales)
ggplot() +
geom_bar(data = segment_summary, aes(x = segment, y = pct_visitors), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", round(hline_value,2))), color="blue") +
geom_text(data = segment_summary,
aes(x = segment, y = pct_visitors, label = round(pct_visitors,2)), color="grey25") +
ggtitle("Percent of Customers Online by Segment") +
xlab("Segment") + ylab("% Customers Online") +
scale_x_discrete(limits=c(seq(1,9))) +
scale_y_continuous(labels = percent) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
library(scales)
ggplot() +
geom_bar(data = segment_summary, aes(x = segment, y = pct_visitors), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", round(hline_value,2))), color="blue") +
geom_text(data = segment_summary,
aes(x = segment, y = pct_visitors, label = round(100*pct_visitors,2)), color="grey25") +
ggtitle("Percent of Customers Online by Segment") +
xlab("Segment") + ylab("% Customers Online") +
scale_x_discrete(limits=c(seq(1,9))) +
scale_y_continuous(labels = percent) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
ggplot() +
geom_bar(data = segment_summary, aes(x = segment, y = pct_visitors), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", round(hline_value,2))), color="blue") +
geom_text(data = segment_summary,
aes(x = segment, y = pct_visitors, label = paste0(round(100*pct_visitors,2),"%")), color="grey25") +
ggtitle("Percent of Customers Online by Segment") +
xlab("Segment") + ylab("% Customers Online") +
scale_x_discrete(limits=c(seq(1,9))) +
scale_y_continuous(labels = percent) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
ggplot() +
geom_bar(data = segment_summary, aes(x = segment, y = pct_visitors), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", paste0(round(100*hline_value,2),"%"))), color="blue") +
geom_text(data = segment_summary,
aes(x = segment, y = pct_visitors, label = paste0(round(100*pct_visitors,2),"%")), color="grey25") +
ggtitle("Percent of Customers Online by Segment") +
xlab("Segment") + ylab("% Customers Online") +
scale_x_discrete(limits=c(seq(1,9))) +
scale_y_continuous(labels = percent) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
ggplot() +
geom_bar(data = segment_summary, aes(x = segment, y = pct_visitors), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", paste0(round(100*hline_value,2),"%"))), color="blue") +
geom_text(data = segment_summary,
aes(x = segment, y = pct_visitors, label = paste0(round(100*pct_visitors,2),"%")), color="grey25") +
ggtitle("Percent of Customers Online by Segment") +
xlab("Segment") + ylab("% Customers Online") +
scale_x_discrete(limits=c(seq(1,9))) +
scale_y_continuous(formatter = "percent") +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
?continuous_scale
ggplot() +
geom_bar(data = segment_summary, aes(x = segment, y = pct_visitors), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", paste0(round(100*hline_value,2),"%"))), color="blue") +
geom_text(data = segment_summary,
aes(x = segment, y = pct_visitors, label = paste0(round(100*pct_visitors,2),"%")), color="grey25") +
ggtitle("Percent of Customers Online by Segment") +
xlab("Segment") + ylab("% Customers Online") +
scale_x_discrete(limits=c(seq(1,9))) +
scale_y_continuous(labels = percent) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
segment_summary = mutate(segment_summary, pct_visitors*100)
hline_value = mean(segment_summary$pct_visitors)
ggplot() +
geom_bar(data = segment_summary, aes(x = segment, y = pct_visitors), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", paste0(round(100*hline_value,2),"%"))), color="blue") +
geom_text(data = segment_summary,
aes(x = segment, y = pct_visitors, label = paste0(round(100*pct_visitors,2),"%")), color="grey25") +
ggtitle("Percent of Customers Online by Segment") +
xlab("Segment") + ylab("% Customers Online") +
scale_x_discrete(limits=c(seq(1,9))) +
#scale_y_continuous(labels = percent) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
segment_summary$pct_visitors
segment_summary = mutate(segment_summary, pct_visitors*100)
segment_summary
segment_summary = mutate(segment_summary, pct_visitors=pct_visitors*100)
hline_value = mean(segment_summary$pct_visitors)
ggplot() +
geom_bar(data = segment_summary, aes(x = segment, y = pct_visitors), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", paste0(round(100*hline_value,2),"%"))), color="blue") +
geom_text(data = segment_summary,
aes(x = segment, y = pct_visitors, label = paste0(round(100*pct_visitors,2),"%")), color="grey25") +
ggtitle("Percent of Customers Online by Segment") +
xlab("Segment") + ylab("% Customers Online") +
scale_x_discrete(limits=c(seq(1,9))) +
#scale_y_continuous(labels = percent) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
pct_online_by_segment <- select(segment_summary, segment, pct_visitors=pct_visitors*100)
pct_online_by_segment <- select(segment_summary, segment, pct_visitors) %>% mutate(pct_visitors=pct_visitors*100)
pct_online_by_segment
segment_summary <- segment_population %>% left_join(visitors_by_segment_df, c("segment"))
segment_summary <- mutate(segment_summary, num_visitors = num_visitors*100)
segment_summary <- mutate(segment_summary, pct_visitors = num_visitors/population)
pct_online_by_segment <- select(segment_summary, segment, pct_visitors) %>% mutate(pct_visitors=pct_visitors*100)
pct_online_by_segment
hline_value = mean(segment_summary$pct_visitors)
hline_value = mean(segment_summary$pct_visitors)
ggplot() +
geom_bar(data = segment_summary, aes(x = segment, y = pct_visitors), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", round(100*hline_value,2))), color="blue") +
geom_text(data = segment_summary,
aes(x = segment, y = pct_visitors, label = round(100*pct_visitors,2)), color="grey25") +
ggtitle("Percent of Customers Online by Segment") +
xlab("Segment") + ylab("% Customers Online") +
scale_x_discrete(limits=c(seq(1,9))) +
#scale_y_continuous(labels = percent) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
ggplot() +
geom_bar(data = pct_online_by_segment, aes(x = segment, y = pct_visitors), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", round(100*hline_value,2))), color="blue") +
geom_text(data = pct_online_by_segment,
aes(x = segment, y = pct_visitors, label = round(100*pct_visitors,2)), color="grey25") +
ggtitle("Percent of Customers Online by Segment") +
xlab("Segment") + ylab("% Customers Online") +
scale_x_discrete(limits=c(seq(1,9))) +
#scale_y_continuous(labels = percent) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
hline_value = mean(pct_online_by_segment$pct_visitors)
ggplot() +
geom_bar(data = pct_online_by_segment, aes(x = segment, y = pct_visitors), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", round(100*hline_value,2))), color="blue") +
geom_text(data = pct_online_by_segment,
aes(x = segment, y = pct_visitors, label = round(100*pct_visitors,2)), color="grey25") +
ggtitle("Percent of Customers Online by Segment") +
xlab("Segment") + ylab("% Customers Online") +
scale_x_discrete(limits=c(seq(1,9))) +
#scale_y_continuous(labels = percent) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
hline_value = mean(pct_online_by_segment$pct_visitors)
ggplot() +
geom_bar(data = pct_online_by_segment, aes(x = segment, y = pct_visitors), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", round(hline_value,2))), color="blue") +
geom_text(data = pct_online_by_segment,
aes(x = segment, y = pct_visitors, label = round(pct_visitors,2)), color="grey25") +
ggtitle("Percent of Customers Online by Segment") +
xlab("Segment") + ylab("% Customers Online") +
scale_x_discrete(limits=c(seq(1,9))) +
#scale_y_continuous(labels = percent) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
ggplot() +
geom_bar(data = pct_online_by_segment, aes(x = segment, y = pct_visitors), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", round(hline_value,2))), color="blue") +
geom_text(data = pct_online_by_segment,
aes(x = segment, y = pct_visitors, label = paste0(round(pct_visitors,2),"%")), color="grey25") +
ggtitle("Percent of Customers Online by Segment") +
xlab("Segment") + ylab("% Customers Online") +
scale_x_discrete(limits=c(seq(1,9))) +
#scale_y_continuous(labels = percent) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
hline_value = mean(pct_online_by_segment$pct_visitors)
ggplot() +
geom_bar(data = pct_online_by_segment, aes(x = segment, y = pct_visitors), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", paste0(round(hline_value,2),"%"))), color="blue") +
geom_text(data = pct_online_by_segment,
aes(x = segment, y = pct_visitors, label = paste0(round(pct_visitors,2),"%")), color="grey25") +
ggtitle("Percent of Customers Online by Segment") +
xlab("Segment") + ylab("% Customers Online") +
scale_x_discrete(limits=c(seq(1,9))) +
#scale_y_continuous(labels = percent) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
ggplot() +
geom_bar(data = pct_online_by_segment, aes(x = segment, y = pct_visitors), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,2,label = paste0("Overall mean: ", paste0(round(hline_value,2),"%"))), color="blue") +
geom_text(data = pct_online_by_segment,
aes(x = segment, y = pct_visitors, label = paste0(round(pct_visitors,2),"%")), color="grey25") +
ggtitle("Percent of Customers Online by Segment") +
xlab("Segment") + ylab("% Customers Online") +
scale_x_discrete(limits=c(seq(1,9))) +
#scale_y_continuous(labels = percent) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
page_views_per_cust_df <- filter(page_views_per_cust_df, num_page_views < quantile(page_views_per_cust,0.99, na.rm=TRUE))
page_views_by_segment <-
sqldf("select segment, avg(num_page_views) as avg_page_views
from rr_segment_lkp
left join page_views_per_cust_df using (rr_member_nbr)
group by segment")
# filter to only include valid segments
page_views_by_segment <- filter(page_views_by_segment, ! is.na(segment))
# plot segment values along with the overall mean
hline_value = mean(page_views_by_segment$avg_page_views)
ggplot() +
geom_bar(data = page_views_by_segment, aes(x = segment, y = avg_page_views), stat="identity", fill = I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,1,label = paste0("Overall mean: ", round(hline_value,2))), color="blue") +
geom_text(data = page_views_by_segment,
aes(x = segment, y = avg_page_views, label = round(avg_page_views,2)), color="grey25") +
ggtitle("Average Page Views / Customer by Segment") +
xlab("Segment") + ylab("Avg Page Views / Customer") +
scale_x_discrete(limits=c(seq(1,9))) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
ggplot() +
geom_bar(data = pct_online_by_segment,
aes(x =segment, y=pct_visitors), stat="identity", fill=I("grey50")) +
geom_hline(yintercept = hline_value, color="blue") +
geom_text(aes(8.25,2,label = paste0("Overall mean: ", paste0(round(hline_value,2),"%"))),
color="blue") +
geom_text(data = pct_online_by_segment,
aes(x = segment, y = pct_visitors, label = paste0(round(pct_visitors,2),"%")),
color="grey25") +
ggtitle("Percent of Customers Online by Segment") +
xlab("Segment") + ylab("% Customers Online") +
scale_x_discrete(limits=c(seq(1,9))) +
theme(axis.text.x = element_text(size = rel(1.5)),
axis.title.x = element_text(vjust=-0.25, size = rel(1.2)),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title = element_text(vjust = 1, size = rel(1.25)))
getwd
getwd()
library(dplyr)
library(sqldf)
library(ggplot2)
require(grid)
library(scales) # may not need this anymore
elicit_gray <- '#646464'
elicit_lt_blue <- '#6E92A8'
elicit_navy_blue <- '#35434D'
elicit_blue_gray <- '#646B86'
elicit_blue_gray_2 <- '#C0C3D0'
elicit_blue_gray_3 <- '#A0A5B8'
elicit_blue_gray_4 <- '#4B5064'
elicit_blue_gray_5 <- '#323543'
elicit_teal <- '#A7DBDA'
elicit_brown <- '#AD8F67'
elicit_green <- '#335542'
elicit_blue_gray <- '#646B86'
elicit_yellow <- '#CCB400'
elicit_orange <- '#D16349'
hits <- read.table("/Users/jbardin/Documents/clickstream-exploration/swa/hits_distilled.csv",
stringsAsFactors = FALSE, sep=",", header=T, fill=T, comment.char = "")
hits_df <- tbl_df(hits)
total_hit_records <- count(hits_df)
print(paste(paste("There are a total of", format(total_hit_records, big.mark=",")), "hit records."), quote=FALSE)
visitor_rr_lkp_df <- distinct(select(hits_df[ which(hits_df$post_evar45 != ''), ], post_visid_high, post_visid_low, post_evar45))
# convert rr member number from character to number
visitor_rr_lkp_df <- mutate(visitor_rr_lkp_df, rr_member_nbr = as.numeric(post_evar45))
hits_df <- hits_df[!is.na(hits_df$exclude_hit),]
hits_df <- hits_df[!is.na(hits_df$post_visid_high),]
hits_df <- hits_df[!is.na(hits_df$post_visid_low),]
visitor_rr_lkp_df <- distinct(select(hits_df[ which(hits_df$post_evar45 != ''), ], post_visid_high, post_visid_low, post_evar45))
# convert rr member number from character to number
visitor_rr_lkp_df <- mutate(visitor_rr_lkp_df, rr_member_nbr = as.numeric(post_evar45))
num_visitors <-
hits_df %>%
filter(! exclude_hit > 0, ! hit_source %in% c(5,7,8,9)) %>%
select(post_visid_high, post_visid_low) %>%
distinct %>%
count
print(paste(paste("There are a total of", format(num_visitors, big.mark=",")), "visitors."), quote=FALSE)
visitors_df <-
hits_df %>%
filter(! exclude_hit > 0, ! hit_source %in% c(5,7,8,9)) %>%
select(post_visid_high, post_visid_low) %>%
distinct
View(visitors_df)
View(visitors_df)
session_records <- read.csv("~/Fossil-clickstream-sample-files/Fossil.com/GE_Session_Feed_8-7-14_90252781_20140807-20140807.csv", header=TRUE, skip = 1)
print(paste(paste("There are a total of", format(count(session_records), big.mark=",")), "session records."), quote=FALSE)
View(session_records)
distinct(select(session_records,Marketing.Channel))
library(dplyr)
distinct(select(session_records,Marketing.Channel))
?order
?formula
?lm
temp <- c(1,4,5,2)
temp <- order(temp)
View(temp)
temp <- temp[order(temp),]
temp <- temp[order(temp)]
View(temp)
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='elicit', token='105CACF0F623A621E2228CAED7F0618C', secret='P/xbShZEF9MAddtw6rY3udD0gPLJkDbnnxB1t5HU')
library(shinyapps)
library(shiny)
runGitHub( "demo_dashboard", "jrbardin")
library(DBI)
con <- dbConnect(RMySQL::MySQL(),
user='admin',
password='Jumbiten7',
host='mydbinstance.cs19s1qnahgd.us-west-2.rds.amazonaws.com',
port=3306,
dbname='demo_db')
perror 60
library(DBI)
con <- dbConnect(RMySQL::MySQL(),
user='admin',
password='Jumbiten7',
host='demodbinstance.cs19s1qnahgd.us-west-2.rds.amazonaws.com',
port=3306,
dbname='demo_db')
First R Presentation
slidify("index.Rmd")
library(slidify)
library(slidifyLibraries)
slidify("index.Rmd")
getwd()
setwd("~/GitHub/jrbardin/Coursera/DevelopingDataProducts/course_project/best_car")
slidify("index.Rmd")
publish(user = "jrbardin", repo = "Coursera", host = 'github')
slidify("index.Rmd")
setwd("~/GitHub/jrbardin/Coursera/DevelopingDataProducts/deck")
slidify("index.Rmd")
library(slidify)
library(slidifyLibraries)
slidify("index.Rmd")
source('~/.active-rstudio-document', echo=TRUE)
slidify("index.Rmd")
